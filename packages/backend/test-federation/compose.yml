include:
  - ./compose.a.yml
  - ./compose.b.yml

services:
  setup:
    extends:
      file: ./compose.tpl.yml
      service: Acuaskey
    command: >
      bash -c "
        corepack enable && corepack prepare
        pnpm -F backend i
        pnpm -F acuaskey-js i
        pnpm -F misskey-reversi i
      "

  tester:
    image: node:20
    depends_on:
      a.test:
        condition: service_healthy
      b.test:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - NODE_EXTRA_CA_CERTS=/usr/local/share/ca-certificates/rootCA.crt
      - COREPACK_DEFAULT_TO_LATEST=0
    volumes:
      - type: bind
        source: ../package.json
        target: /Acuaskey/packages/backend/package.json
        read_only: true
      - type: bind
        source: ../test/resources
        target: /Acuaskey/packages/backend/test/resources
        read_only: true
      - type: bind
        source: ./test
        target: /Acuaskey/packages/backend/test-federation/test
        read_only: true
      - type: bind
        source: ../jest.config.cjs
        target: /Acuaskey/packages/backend/jest.config.cjs
        read_only: true
      - type: bind
        source: ../jest.config.fed.cjs
        target: /Acuaskey/packages/backend/jest.config.fed.cjs
        read_only: true
      - type: bind
        source: ../../acuaskey-js/built
        target: /Acuaskey/packages/acuaskey-js/built
        read_only: true
      - type: bind
        source: ../../acuaskey-js/package.json
        target: /Acuaskey/packages/acuaskey-js/package.json
        read_only: true
      - type: bind
        source: ../../../package.json
        target: /Acuaskey/package.json
        read_only: true
      - type: bind
        source: ../../../pnpm-lock.yaml
        target: /Acuaskey/pnpm-lock.yaml
        read_only: true
      - type: bind
        source: ../../../pnpm-workspace.yaml
        target: /Acuaskey/pnpm-workspace.yaml
        read_only: true
      - type: bind
        source: ./certificates/rootCA.crt
        target: /usr/local/share/ca-certificates/rootCA.crt
        read_only: true
    working_dir: /Acuaskey
    entrypoint: >
      bash -c '
        corepack enable && corepack prepare
        pnpm -F acuaskey-js i --frozen-lockfile
        pnpm -F backend i --frozen-lockfile
        exec "$0" "$@"
      '
    command: pnpm -F backend test:fed

  daemon:
    image: node:20
    depends_on:
      redis.test:
        condition: service_healthy
    environment:
      - COREPACK_DEFAULT_TO_LATEST=0
    volumes:
      - type: bind
        source: ../package.json
        target: /Acuaskey/packages/backend/package.json
        read_only: true
      - type: bind
        source: ./daemon.ts
        target: /Acuaskey/packages/backend/test-federation/daemon.ts
        read_only: true
      - type: bind
        source: ./tsconfig.json
        target: /Acuaskey/packages/backend/test-federation/tsconfig.json
        read_only: true
      - type: bind
        source: ../../../package.json
        target: /Acuaskey/package.json
        read_only: true
      - type: bind
        source: ../../../pnpm-lock.yaml
        target: /Acuaskey/pnpm-lock.yaml
        read_only: true
      - type: bind
        source: ../../../pnpm-workspace.yaml
        target: /Acuaskey/pnpm-workspace.yaml
        read_only: true
    working_dir: /Acuaskey
    command: >
      bash -c "
        corepack enable && corepack prepare
        pnpm -F backend i --frozen-lockfile
        pnpm exec tsc -p ./packages/backend/test-federation
        node ./packages/backend/test-federation/built/daemon.js
      "

  redis.test:
    image: redis:7-alpine
    volumes:
      - type: bind
        source: ./volumes/redis
        target: /data
        bind:
          create_host_path: true
    healthcheck:
      test: redis-cli ping
      interval: 5s
      retries: 20
